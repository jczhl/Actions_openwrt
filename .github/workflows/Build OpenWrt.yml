name: Build OpenWrt

on: 
  watch:
    types: [started]
    
env:
  repo_url: https://github.com/coolsnowwolf/lede
  repo_branch: master
  repo_os: openwrt
  config: PSG1218.config
  model: PSG1218
  TZ: Asia/Shanghai
  replace: true
  ssh: true

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
    - name: Clone source code
      run: git clone --depth 1 $repo_url -b $repo_branch openwrt

    - name: 替换config
      if: env.replace == 'true'        
      run: |
        rm -rf $GITHUB_WORKSPACE/openwrt/.config
        mv $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/.config        
           
    - name: Clone extra luci source code
      run: |
        git clone https://github.com/honwen/luci-app-aliddns openwrt/package/luci-app-aliddns
        git clone https://github.com/zxlhhyccc/luci-app-serverchan openwrt/package/luci-app-serverchan
        git clone https://github.com/Kinodi/luci-theme-atmaterial openwrt/package/luci-theme-atmaterial
        git clone https://github.com/jerrykuku/luci-theme-argon openwrt/package/luci-theme-argon
        git clone https://github.com/Lienol/openwrt-package openwrt/package/openwrt-package
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: SSH connection to Actions
      if: env.ssh == 'true'            
      uses: P3TERX/ssh2actions@v1.0.0
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}      

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Assemble artifact
      run: |
        rm -rf ./zhlhlf/
        mkdir zhlhlf
        find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./zhlhlf
        find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./zhlhlf
        
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt phicomm k2
        path: zhlhlf/
