name: Build OpenWrt

on: 
  watch:
    types: [started]
    
env:
  repo_url: https://github.com/coolsnowwolf/lede
  repo_branch: master
  repo_os: openwrt
  config: .config
  model: PSG1218
  TZ: Asia/Shanghai
  wetransfer: true66
  release: true
  pack7z: true66
  zip: true 
  replace: true
  ssh: true
  

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 清理环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
    - name: 获取源码
      run: |
        git clone --depth 1 $repo_url -b $repo_branch openwrt

    - name: 替换config
      if: env.replace == 'true'        
      run: |
        rm -rf $GITHUB_WORKSPACE/openwrt/.config
        mv $GITHUB_WORKSPACE/$config $GITHUB_WORKSPACE/openwrt/.config        
           
    - name: 更新源码部分插件包
      run: |
        git clone https://github.com/honwen/luci-app-aliddns openwrt/package/luci-app-aliddns
        git clone https://github.com/zxlhhyccc/luci-app-serverchan openwrt/package/luci-app-serverchan
        git clone https://github.com/Kinodi/luci-theme-atmaterial openwrt/package/luci-theme-atmaterial
        git clone https://github.com/jerrykuku/luci-theme-argon openwrt/package/luci-theme-argon
        git clone https://github.com/Lienol/openwrt-package openwrt/package/openwrt-package
        
    - name: 更新 feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装 feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: 获取软件包
      run: |
        cd openwrt   
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        
    - name: 移动固件至zhlhlf
      run: |
        rm -rf ./zhlhlf/
        mkdir zhlhlf
        find openwrt/ -name ".config" | xargs -i mv -f {} ./zhlhlf
        find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./zhlhlf        
        find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./zhlhlf
        
    - name: 7z 打包
      if: env.pack7z == 'true'    
      run: |
         7z a -r $model-$repo_os-by-jczhl.7z zhlhlf
            
    - name: zip 打包
      if: env.zip == 'true'
      run: |
        zip -r $model-$repo_os-by-jczhl.zip zhlhlf

    - name: 移动生成包至zhlhlf目录
      run: |
         mv $model-$repo_os-by-jczhl.* zhlhlf

    - name: ssh连接
      if: env.ssh == 'true'            
      uses: P3TERX/ssh2actions@v1.0.0
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}      
                                                            
    - name: 上传zhlhlf目录所有文件至WeTransfer
      if: env.wetransfer == 'true'      
      run: |
        sudo ./transfer wet zhlhlf/$model-$repo_os-by-jczhl.*

    - name: 上传zhlhlf目录所有文件至 release
      if: env.release == 'true'      
      uses: ncipollo/release-action@v1.8.6
      with:
        artifacts: zhlhlf/$model-$repo_os-by-jczhl.*
        name: openwrt
        tag: GSI--Android-${{ github.run_number }}
        token: ${{ secrets.GITHUB_TOKEN }}


